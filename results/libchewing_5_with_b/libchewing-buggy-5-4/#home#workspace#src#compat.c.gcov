        -:    0:Source:/home/workspace/src/compat.c
        -:    1:/**
        -:    2: * compat.c
        -:    3: *
        -:    4: * Copyright (c) 2014
        -:    5: *      libchewing Core Team. See ChangeLog for details.
        -:    6: *
        -:    7: * See the file "COPYING" for information on usage and redistribution
        -:    8: * of this file.
        -:    9: */
        -:   10:
        -:   11:#ifdef HAVE_CONFIG_H
        -:   12:#    include <config.h>
        -:   13:#endif
        -:   14:
        -:   15:#include <string.h>
        -:   16:
        -:   17:#include "chewing-utf8-util.h"
        -:   18:
        -:   19:/* for compatibility */
        -:   20:
        -:   21:#include "chewing.h"
        -:   22:
        1:   23:CHEWING_API int chewing_zuin_Check(ChewingContext *ctx)
        -:   24:{
        1:   25:    return !chewing_bopomofo_Check(ctx);
        -:   26:}
        -:   27:
        1:   28:CHEWING_API char *chewing_zuin_String(ChewingContext *ctx, int *bopomofo_count)
        -:   29:{
        1:   30:    char *s = strdup(chewing_bopomofo_String_static(ctx));
        -:   31:
        1:   32:    if (bopomofo_count) {
    #####:   33:        *bopomofo_count = ueStrLen(s);
        -:   34:    }
        -:   35:
        1:   36:    return s;
        -:   37:}
        -:   38:
    #####:   39:CHEWING_API int chewing_Init(const char *dataPath UNUSED, const char *hashPath UNUSED)
        -:   40:{
    #####:   41:    return 0;
        -:   42:}
        -:   43:
    #####:   44:CHEWING_API void chewing_Terminate()
        -:   45:{
    #####:   46:}
        -:   47:
    #####:   48:CHEWING_API int chewing_Configure(ChewingContext *ctx, ChewingConfigData * pcd)
        -:   49:{
    #####:   50:    chewing_set_candPerPage(ctx, pcd->candPerPage);
    #####:   51:    chewing_set_maxChiSymbolLen(ctx, pcd->maxChiSymbolLen);
    #####:   52:    chewing_set_selKey(ctx, pcd->selKey, MAX_SELKEY);
    #####:   53:    chewing_set_addPhraseDirection(ctx, pcd->bAddPhraseForward);
    #####:   54:    chewing_set_spaceAsSelection(ctx, pcd->bSpaceAsSelection);
    #####:   55:    chewing_set_escCleanAllBuf(ctx, pcd->bEscCleanAllBuf);
    #####:   56:    chewing_set_autoShiftCur(ctx, pcd->bAutoShiftCur);
    #####:   57:    chewing_set_easySymbolInput(ctx, pcd->bEasySymbolInput);
    #####:   58:    chewing_set_phraseChoiceRearward(ctx, pcd->bPhraseChoiceRearward);
        -:   59:
    #####:   60:    return 0;
        -:   61:}
        -:   62:
    #####:   63:CHEWING_API void chewing_set_hsuSelKeyType(ChewingContext *ctx, int mode)
        -:   64:{
    #####:   65:}
        -:   66:
    #####:   67:CHEWING_API int chewing_get_hsuSelKeyType(ChewingContext *ctx)
        -:   68:{
    #####:   69:    return 0;
        -:   70:}
