        -:    0:Source:/home/workspace/tests/unit-ext/test-ext-handle-scope-remove.c
        -:    0:Programs:296
        -:    1:/* Copyright JS Foundation and other contributors, http://js.foundation
        -:    2: *
        -:    3: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    4: * you may not use this file except in compliance with the License.
        -:    5: * You may obtain a copy of the License at
        -:    6: *
        -:    7: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    8: *
        -:    9: * Unless required by applicable law or agreed to in writing, software
        -:   10: * distributed under the License is distributed on an "AS IS" BASIS
        -:   11: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12: * See the License for the specific language governing permissions and
        -:   13: * limitations under the License.
        -:   14: */
        -:   15:
        -:   16:/**
        -:   17: * Unit test for jerry-ext/handle-scope.
        -:   18: */
        -:   19:
        -:   20:#include "jerryscript.h"
        -:   21:#include "jerryscript-ext/handle-scope.h"
        -:   22:#include "test-common.h"
        -:   23:
        -:   24:static int native_free_cb_call_count;
        -:   25:
        -:   26:static void
    #####:   27:native_free_cb (void *native_p, /**< native pointer */
        -:   28:                jerry_object_native_info_t *info_p) /**< native info */
        -:   29:{
        -:   30:  (void) native_p;
        -:   31:  (void) info_p;
    #####:   32:  ++native_free_cb_call_count;
    #####:   33:} /* native_free_cb */
        -:   34:
        -:   35:static const jerry_object_native_info_t native_info =
        -:   36:{
        -:   37:  .free_cb = native_free_cb,
        -:   38:  .number_of_references = 0,
        -:   39:  .offset_of_references = 0,
        -:   40:};
        -:   41:
        -:   42:static jerry_value_t
    #####:   43:create_object (void)
        -:   44:{
        -:   45:  jerryx_escapable_handle_scope scope;
    #####:   46:  jerryx_open_escapable_handle_scope (&scope);
    #####:   47:  jerry_value_t obj = jerryx_create_handle (jerry_create_object ());
    #####:   48:  jerry_set_object_native_pointer (obj, NULL, &native_info);
        -:   49:
        -:   50:  // If leaves `escaped` uninitialized, there will be a style error on linux thrown by compiler
    #####:   51:  jerry_value_t escaped = 0;
    #####:   52:  jerryx_remove_handle (scope, obj, &escaped);
    #####:   53:  TEST_ASSERT (scope->prelist_handle_count == 0);
    #####:   54:  TEST_ASSERT (scope->handle_ptr == NULL);
        -:   55:
    #####:   56:  jerryx_close_handle_scope (scope);
    #####:   57:  return escaped;
        -:   58:} /* create_object */
        -:   59:
        -:   60:static void
    #####:   61:test_handle_scope_val (void)
        -:   62:{
        -:   63:  jerryx_handle_scope scope;
    #####:   64:  jerryx_open_handle_scope (&scope);
    #####:   65:  jerry_value_t obj = create_object ();
        -:   66:  (void) obj;
        -:   67:
    #####:   68:  jerry_gc (JERRY_GC_PRESSURE_LOW);
    #####:   69:  TEST_ASSERT (native_free_cb_call_count == 0);
        -:   70:
    #####:   71:  jerryx_close_handle_scope (scope);
    #####:   72:  jerry_gc (JERRY_GC_PRESSURE_LOW);
    #####:   73:  TEST_ASSERT (native_free_cb_call_count == 0);
        -:   74:
    #####:   75:  jerry_release_value (obj);
    #####:   76:  jerry_gc (JERRY_GC_PRESSURE_LOW);
    #####:   77:  TEST_ASSERT (native_free_cb_call_count == 1);
    #####:   78:} /* test_handle_scope_val */
        -:   79:
        -:   80:int
    #####:   81:main (void)
        -:   82:{
    #####:   83:  jerry_init (JERRY_INIT_EMPTY);
        -:   84:
    #####:   85:  native_free_cb_call_count = 0;
    #####:   86:  test_handle_scope_val ();
        -:   87:
    #####:   88:  jerry_cleanup ();
        -:   89:} /* main */
