        -:    0:Source:/home/workspace/tests/unit-core/test-from-property-descriptor.c
        -:    0:Programs:296
        -:    1:/* Copyright JS Foundation and other contributors, http://js.foundation
        -:    2: *
        -:    3: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    4: * you may not use this file except in compliance with the License.
        -:    5: * You may obtain a copy of the License at
        -:    6: *
        -:    7: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    8: *
        -:    9: * Unless required by applicable law or agreed to in writing, software
        -:   10: * distributed under the License is distributed on an "AS IS" BASIS
        -:   11: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12: * See the License for the specific language governing permissions and
        -:   13: * limitations under the License.
        -:   14: */
        -:   15:
        -:   16:#include "config.h"
        -:   17:#include "jerryscript.h"
        -:   18:#include "test-common.h"
        -:   19:
        -:   20:int
    #####:   21:main (void)
        -:   22:{
    #####:   23:  TEST_INIT ();
        -:   24:
    #####:   25:  jerry_init (JERRY_INIT_EMPTY);
        -:   26:
    #####:   27:  jerry_value_t object = jerry_create_object ();
    #####:   28:  jerry_value_t prop_name = jerry_create_string_from_utf8 ((jerry_char_t *) "length");
    #####:   29:  jerry_value_t value = jerry_create_boolean (true);
        -:   30:
    #####:   31:  TEST_ASSERT (jerry_set_property (object, prop_name, prop_name));
    #####:   32:  TEST_ASSERT (jerry_has_property (object, prop_name));
    #####:   33:  TEST_ASSERT (jerry_has_own_property (object, prop_name));
        -:   34:
        -:   35:  jerry_property_descriptor_t prop_desc;
    #####:   36:  TEST_ASSERT (jerry_get_own_property_descriptor (object, prop_name, &prop_desc));
        -:   37:
    #####:   38:  jerry_value_t from_object = jerry_from_property_descriptor (&prop_desc);
        -:   39:
    #####:   40:  prop_name = jerry_create_string_from_utf8 ((jerry_char_t *) "value");
    #####:   41:  value = jerry_get_property (from_object, prop_name);
    #####:   42:  TEST_ASSERT (value == prop_desc.value);
        -:   43:
    #####:   44:  prop_name = jerry_create_string_from_utf8 ((jerry_char_t *) "writable");
    #####:   45:  value = jerry_get_property (from_object, prop_name);
    #####:   46:  TEST_ASSERT (jerry_value_is_true (value) == ((prop_desc.flags & JERRY_PROP_IS_WRITABLE) != 0));
        -:   47:
    #####:   48:  prop_name = jerry_create_string_from_utf8 ((jerry_char_t *) "enumerable");
    #####:   49:  value = jerry_get_property (from_object, prop_name);
    #####:   50:  TEST_ASSERT (jerry_value_is_true (value) == ((prop_desc.flags & JERRY_PROP_IS_ENUMERABLE) != 0));
        -:   51:
    #####:   52:  prop_name = jerry_create_string_from_utf8 ((jerry_char_t *) "configurable");
    #####:   53:  value = jerry_get_property (from_object, prop_name);
    #####:   54:  TEST_ASSERT (jerry_value_is_true (value) == ((prop_desc.flags & JERRY_PROP_IS_CONFIGURABLE) != 0));
        -:   55:
    #####:   56:  jerry_release_value (object);
    #####:   57:  jerry_release_value (prop_name);
    #####:   58:  jerry_release_value (value);
    #####:   59:  jerry_release_value (from_object);
    #####:   60:  jerry_property_descriptor_free (&prop_desc);
        -:   61:
    #####:   62:  prop_desc.flags = JERRY_PROP_IS_CONFIGURABLE;
    #####:   63:  from_object = jerry_from_property_descriptor (&prop_desc);
    #####:   64:  TEST_ASSERT (jerry_value_is_error (from_object));
    #####:   65:  jerry_release_value (from_object);
        -:   66:
    #####:   67:  prop_desc.flags = JERRY_PROP_IS_ENUMERABLE;
    #####:   68:  from_object = jerry_from_property_descriptor (&prop_desc);
    #####:   69:  TEST_ASSERT (jerry_value_is_error (from_object));
    #####:   70:  jerry_release_value (from_object);
        -:   71:
    #####:   72:  prop_desc.flags = JERRY_PROP_IS_WRITABLE;
    #####:   73:  from_object = jerry_from_property_descriptor (&prop_desc);
    #####:   74:  TEST_ASSERT (jerry_value_is_error (from_object));
    #####:   75:  jerry_release_value (from_object);
        -:   76:
    #####:   77:  jerry_cleanup ();
        -:   78:  return 0;
        -:   79:} /* main */
