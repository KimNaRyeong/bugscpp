        -:    0:Source:/home/workspace/jerry-core/ecma/builtin-objects/ecma-builtin-bigint.c
        -:    0:Programs:296
        -:    1:/* Copyright JS Foundation and other contributors, http://js.foundation
        -:    2: *
        -:    3: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    4: * you may not use this file except in compliance with the License.
        -:    5: * You may obtain a copy of the License at
        -:    6: *
        -:    7: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    8: *
        -:    9: * Unless required by applicable law or agreed to in writing, software
        -:   10: * distributed under the License is distributed on an "AS IS" BASIS
        -:   11: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12: * See the License for the specific language governing permissions and
        -:   13: * limitations under the License.
        -:   14: */
        -:   15:
        -:   16:#include "ecma-bigint.h"
        -:   17:#include "ecma-builtins.h"
        -:   18:#include "ecma-exceptions.h"
        -:   19:
        -:   20:#if JERRY_BUILTIN_BIGINT
        -:   21:
        -:   22:#define ECMA_BUILTINS_INTERNAL
        -:   23:#include "ecma-builtins-internal.h"
        -:   24:
        -:   25:#define BUILTIN_INC_HEADER_NAME "ecma-builtin-bigint.inc.h"
        -:   26:#define BUILTIN_UNDERSCORED_ID bigint
        -:   27:#include "ecma-builtin-internal-routines-template.inc.h"
        -:   28:
        -:   29:/** \addtogroup ecma ECMA
        -:   30: * @{
        -:   31: *
        -:   32: * \addtogroup ecmabuiltins
        -:   33: * @{
        -:   34: *
        -:   35: * \addtogroup bigint ECMA BigInt object built-in
        -:   36: * @{
        -:   37: */
        -:   38:
        -:   39:/**
        -:   40: * Handle calling [[Call]] of built-in BigInt object
        -:   41: *
        -:   42: * See also:
        -:   43: *          ECMA-262 v11, 20.2.1.1
        -:   44: *
        -:   45: * @return ecma value
        -:   46: */
        -:   47:ecma_value_t
    #####:   48:ecma_builtin_bigint_dispatch_call (const ecma_value_t *arguments_list_p, /**< arguments list */
        -:   49:                                   uint32_t arguments_list_len) /**< number of arguments */
        -:   50:{
    #####:   51:  JERRY_ASSERT (arguments_list_len == 0 || arguments_list_p != NULL);
        -:   52:
    #####:   53:  ecma_value_t value = (arguments_list_len == 0) ? ECMA_VALUE_UNDEFINED : arguments_list_p[0];
    #####:   54:  return ecma_bigint_to_bigint (value, true);
        -:   55:} /* ecma_builtin_bigint_dispatch_call */
        -:   56:
        -:   57:/**
        -:   58: * Handle calling [[Construct]] of built-in BigInt object
        -:   59: *
        -:   60: * See also:
        -:   61: *          ECMA-262 v11, 20.2.1
        -:   62: *
        -:   63: * @return ecma value
        -:   64: */
        -:   65:ecma_value_t
    #####:   66:ecma_builtin_bigint_dispatch_construct (const ecma_value_t *arguments_list_p, /**< arguments list */
        -:   67:                                        uint32_t arguments_list_len) /**< number of arguments */
        -:   68:{
    #####:   69:  JERRY_ASSERT (arguments_list_len == 0 || arguments_list_p != NULL);
        -:   70:
    #####:   71:  return ecma_raise_type_error (ECMA_ERR_MSG ("BigInt function is not a constructor"));
        -:   72:} /* ecma_builtin_bigint_dispatch_construct */
        -:   73:
        -:   74:/**
        -:   75: * @}
        -:   76: * @}
        -:   77: * @}
        -:   78: */
        -:   79:
        -:   80:#endif /* JERRY_BUILTIN_BIGINT */
