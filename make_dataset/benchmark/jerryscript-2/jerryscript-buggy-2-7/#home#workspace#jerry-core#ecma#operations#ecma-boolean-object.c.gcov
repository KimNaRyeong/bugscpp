        -:    0:Source:/home/workspace/jerry-core/ecma/operations/ecma-boolean-object.c
        -:    0:Programs:296
        -:    1:/* Copyright JS Foundation and other contributors, http://js.foundation
        -:    2: *
        -:    3: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    4: * you may not use this file except in compliance with the License.
        -:    5: * You may obtain a copy of the License at
        -:    6: *
        -:    7: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    8: *
        -:    9: * Unless required by applicable law or agreed to in writing, software
        -:   10: * distributed under the License is distributed on an "AS IS" BASIS
        -:   11: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12: * See the License for the specific language governing permissions and
        -:   13: * limitations under the License.
        -:   14: */
        -:   15:
        -:   16:#include "jcontext.h"
        -:   17:#include "ecma-alloc.h"
        -:   18:#include "ecma-boolean-object.h"
        -:   19:#include "ecma-builtins.h"
        -:   20:#include "ecma-exceptions.h"
        -:   21:#include "ecma-gc.h"
        -:   22:#include "ecma-globals.h"
        -:   23:#include "ecma-helpers.h"
        -:   24:#include "ecma-objects.h"
        -:   25:#include "ecma-objects-general.h"
        -:   26:#include "ecma-function-object.h"
        -:   27:
        -:   28:/** \addtogroup ecma ECMA
        -:   29: * @{
        -:   30: *
        -:   31: * \addtogroup ecmabooleanobject ECMA Boolean object related routines
        -:   32: * @{
        -:   33: */
        -:   34:
        -:   35:/**
        -:   36: * Boolean object creation operation.
        -:   37: *
        -:   38: * See also: ECMA-262 v5, 15.6.2.1
        -:   39: *
        -:   40: * @return ecma value
        -:   41: *         Returned value must be freed with ecma_free_value
        -:   42: */
        -:   43:ecma_value_t
    #####:   44:ecma_op_create_boolean_object (ecma_value_t arg) /**< argument passed to the Boolean constructor */
        -:   45:{
    #####:   46:  bool boolean_value = ecma_op_to_boolean (arg);
        -:   47:  ecma_builtin_id_t proto_id;
        -:   48:
        -:   49:#if JERRY_BUILTIN_BOOLEAN
    #####:   50:  proto_id = ECMA_BUILTIN_ID_BOOLEAN_PROTOTYPE;
        -:   51:#else /* JERRY_BUILTIN_BOOLEAN */
        -:   52:  proto_id = ECMA_BUILTIN_ID_OBJECT_PROTOTYPE;
        -:   53:#endif /* !(JERRY_BUILTIN_BOOLEAN */
        -:   54:
    #####:   55:  ecma_object_t *prototype_obj_p = ecma_builtin_get (proto_id);
        -:   56:
        -:   57:#if JERRY_ESNEXT
    #####:   58:  ecma_object_t *new_target = JERRY_CONTEXT (current_new_target_p);
    #####:   59:  if (new_target)
        -:   60:  {
    #####:   61:    prototype_obj_p = ecma_op_get_prototype_from_constructor (new_target, proto_id);
        -:   62:
    #####:   63:    if (JERRY_UNLIKELY (prototype_obj_p == NULL))
        -:   64:    {
    #####:   65:      return ECMA_VALUE_ERROR;
        -:   66:    }
        -:   67:  }
        -:   68:#endif /* JERRY_ESNEXT */
    #####:   69:  ecma_object_t *object_p = ecma_create_object (prototype_obj_p,
        -:   70:                                                sizeof (ecma_extended_object_t),
        -:   71:                                                ECMA_OBJECT_TYPE_CLASS);
        -:   72:
    #####:   73:  ecma_extended_object_t *ext_object_p = (ecma_extended_object_t *) object_p;
    #####:   74:  ext_object_p->u.cls.type = ECMA_OBJECT_CLASS_BOOLEAN;
    #####:   75:  ext_object_p->u.cls.u3.value = ecma_make_boolean_value (boolean_value);
        -:   76:
        -:   77:#if JERRY_ESNEXT
    #####:   78:  if (new_target)
        -:   79:  {
    #####:   80:    ecma_deref_object (prototype_obj_p);
        -:   81:  }
        -:   82:#endif /* JERRY_ESNEXT */
        -:   83:
    #####:   84:  return ecma_make_object_value (object_p);
        -:   85:} /* ecma_op_create_boolean_object */
        -:   86:
        -:   87:/**
        -:   88: * @}
        -:   89: * @}
        -:   90: */
