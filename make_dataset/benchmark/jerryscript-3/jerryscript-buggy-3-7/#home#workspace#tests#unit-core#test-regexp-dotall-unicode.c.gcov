        -:    0:Source:/home/workspace/tests/unit-core/test-regexp-dotall-unicode.c
        -:    0:Programs:291
        -:    1: /* Copyright JS Foundation and other contributors, http://js.foundation
        -:    2: *
        -:    3: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    4: * you may not use this file except in compliance with the License.
        -:    5: * You may obtain a copy of the License at
        -:    6: *
        -:    7: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    8: *
        -:    9: * Unless required by applicable law or agreed to in writing, software
        -:   10: * distributed under the License is distributed on an "AS IS" BASIS
        -:   11: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12: * See the License for the specific language governing permissions and
        -:   13: * limitations under the License.
        -:   14: */
        -:   15:
        -:   16:#include "jerryscript.h"
        -:   17:
        -:   18:#include "test-common.h"
        -:   19:
        -:   20:int
    #####:   21:main (void)
    #####:   22:{
    #####:   23:  TEST_INIT ();
    #####:   24:  jerry_init (JERRY_INIT_EMPTY);
        -:   25:
    #####:   26:  if (!jerry_is_feature_enabled (JERRY_FEATURE_SYMBOL))
        -:   27:  {
    #####:   28:    jerry_port_log (JERRY_LOG_LEVEL_ERROR, "ES.next support is disabled\n");
    #####:   29:    jerry_cleanup ();
    #####:   30:    return 0;
        -:   31:  }
        -:   32:
    #####:   33:  jerry_value_t undefined_this_arg = jerry_create_undefined ();
    #####:   34:  jerry_char_t pattern2[] = "\\u{61}.\\u{62}";
    #####:   35:  uint16_t flags = JERRY_REGEXP_FLAG_DOTALL | JERRY_REGEXP_FLAG_UNICODE | JERRY_REGEXP_FLAG_STICKY;
    #####:   36:  jerry_value_t regex_obj = jerry_create_regexp (pattern2, flags);
    #####:   37:  TEST_ASSERT (jerry_value_is_object (regex_obj));
        -:   38:
    #####:   39:  const jerry_char_t func_src2[] = "return [regex.exec('a\\nb'), regex.dotAll, regex.sticky, regex.unicode ];";
        -:   40:
        -:   41:  jerry_parse_options_t parse_options;
    #####:   42:  parse_options.options = JERRY_PARSE_HAS_ARGUMENT_LIST;
    #####:   43:  parse_options.argument_list = jerry_create_string ((const jerry_char_t *) "regex");
        -:   44:
    #####:   45:  jerry_value_t func_val = jerry_parse (func_src2, sizeof (func_src2) - 1, &parse_options);
    #####:   46:  jerry_release_value (parse_options.argument_list);
        -:   47:
    #####:   48:  jerry_value_t res = jerry_call_function (func_val, undefined_this_arg, &regex_obj, 1);
    #####:   49:  jerry_value_t regex_res = jerry_get_property_by_index (res, 0);
    #####:   50:  jerry_value_t regex_res_str = jerry_get_property_by_index (regex_res, 0);
    #####:   51:  jerry_value_t is_dotall = jerry_get_property_by_index (res, 1);
    #####:   52:  jerry_value_t is_sticky = jerry_get_property_by_index (res, 2);
    #####:   53:  jerry_value_t is_unicode = jerry_get_property_by_index (res, 3);
        -:   54:
    #####:   55:  jerry_size_t str_size = jerry_get_string_size (regex_res_str);
    #####:   56:  JERRY_VLA (jerry_char_t, res_buff, str_size);
    #####:   57:  jerry_size_t res_size = jerry_string_to_char_buffer (regex_res_str, res_buff, str_size);
        -:   58:
    #####:   59:  const char expected_result[] = "a\nb";
    #####:   60:  TEST_ASSERT (res_size == (sizeof (expected_result) - 1));
    #####:   61:  TEST_ASSERT (strncmp (expected_result, (const char *) res_buff, res_size) == 0);
    #####:   62:  TEST_ASSERT (jerry_value_is_true (is_dotall));
    #####:   63:  TEST_ASSERT (jerry_value_is_true (is_sticky));
    #####:   64:  TEST_ASSERT (jerry_value_is_true (is_unicode));
        -:   65:
    #####:   66:  jerry_release_value (regex_obj);
    #####:   67:  jerry_release_value (res);
    #####:   68:  jerry_release_value (func_val);
    #####:   69:  jerry_release_value (regex_res);
    #####:   70:  jerry_release_value (regex_res_str);
    #####:   71:  jerry_release_value (is_dotall);
    #####:   72:  jerry_release_value (is_sticky);
    #####:   73:  jerry_release_value (is_unicode);
        -:   74:
    #####:   75:  jerry_cleanup ();
    #####:   76:  return 0;
        -:   77:} /* main */
