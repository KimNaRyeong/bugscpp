        -:    0:Source:/home/workspace/jerry-core/ecma/operations/ecma-bigint-object.c
        -:    0:Programs:291
        -:    1:/* Copyright JS Foundation and other contributors, http://js.foundation
        -:    2: *
        -:    3: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    4: * you may not use this file except in compliance with the License.
        -:    5: * You may obtain a copy of the License at
        -:    6: *
        -:    7: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    8: *
        -:    9: * Unless required by applicable law or agreed to in writing, software
        -:   10: * distributed under the License is distributed on an "AS IS" BASIS
        -:   11: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12: * See the License for the specific language governing permissions and
        -:   13: * limitations under the License.
        -:   14: */
        -:   15:
        -:   16:#include "ecma-alloc.h"
        -:   17:#include "ecma-bigint-object.h"
        -:   18:#include "ecma-builtins.h"
        -:   19:#include "ecma-exceptions.h"
        -:   20:#include "ecma-gc.h"
        -:   21:#include "ecma-globals.h"
        -:   22:#include "ecma-helpers.h"
        -:   23:#include "ecma-objects.h"
        -:   24:#include "ecma-objects-general.h"
        -:   25:
        -:   26:#if JERRY_BUILTIN_BIGINT
        -:   27:
        -:   28:/** \addtogroup ecma ECMA
        -:   29: * @{
        -:   30: *
        -:   31: * \addtogroup ecmabigintobject ECMA BigInt object related routines
        -:   32: * @{
        -:   33: */
        -:   34:
        -:   35:/**
        -:   36: * BigInt object creation operation.
        -:   37: *
        -:   38: * See also: ECMA-262 v11, 7.1.18
        -:   39: *
        -:   40: * @return ecma value
        -:   41: *         Returned value must be freed with ecma_free_value
        -:   42: */
        -:   43:ecma_value_t
    #####:   44:ecma_op_create_bigint_object (ecma_value_t arg) /**< argument passed to the toObject operation */
        -:   45:{
    #####:   46:  JERRY_ASSERT (ecma_is_value_bigint (arg));
        -:   47:
    #####:   48:  ecma_object_t *prototype_obj_p = ecma_builtin_get (ECMA_BUILTIN_ID_BIGINT_PROTOTYPE);
        -:   49:
    #####:   50:  ecma_object_t *object_p = ecma_create_object (prototype_obj_p,
        -:   51:                                                sizeof (ecma_extended_object_t),
        -:   52:                                                ECMA_OBJECT_TYPE_CLASS);
        -:   53:
    #####:   54:  ecma_extended_object_t *ext_object_p = (ecma_extended_object_t *) object_p;
    #####:   55:  ext_object_p->u.cls.type = ECMA_OBJECT_CLASS_BIGINT;
    #####:   56:  ext_object_p->u.cls.u3.value = ecma_copy_value (arg);
        -:   57:
    #####:   58:  return ecma_make_object_value (object_p);
        -:   59:} /* ecma_op_create_bigint_object */
        -:   60:
        -:   61:/**
        -:   62: * @}
        -:   63: * @}
        -:   64: */
        -:   65:
        -:   66:#endif /* JERRY_BUILTIN_BIGINT */
