        -:    0:Source:/home/workspace/jerry-core/ecma/builtin-objects/ecma-builtin-handlers.c
        -:    0:Programs:291
        -:    1:/* Copyright JS Foundation and other contributors, http://js.foundation
        -:    2: *
        -:    3: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    4: * you may not use this file except in compliance with the License.
        -:    5: * You may obtain a copy of the License at
        -:    6: *
        -:    7: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    8: *
        -:    9: * Unless required by applicable law or agreed to in writing, software
        -:   10: * distributed under the License is distributed on an "AS IS" BASIS
        -:   11: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12: * See the License for the specific language governing permissions and
        -:   13: * limitations under the License.
        -:   14: */
        -:   15:
        -:   16:#include "ecma-globals.h"
        -:   17:
        -:   18:#if JERRY_ESNEXT
        -:   19:
        -:   20:#include "ecma-builtin-handlers.h"
        -:   21:#include "ecma-promise-object.h"
        -:   22:
        -:   23:static const ecma_builtin_handler_t ecma_native_handlers[] =
        -:   24:{
        -:   25:#define ECMA_NATIVE_HANDLER(id, handler, length) handler,
        -:   26:#include "ecma-builtin-handlers.inc.h"
        -:   27:#undef ECMA_NATIVE_HANDLER
        -:   28:};
        -:   29:
        -:   30:static const uint8_t ecma_native_handler_lengths[] =
        -:   31:{
        -:   32:#define ECMA_NATIVE_HANDLER(id, handler, length) length,
        -:   33:#include "ecma-builtin-handlers.inc.h"
        -:   34:#undef ECMA_NATIVE_HANDLER
        -:   35:};
        -:   36:
        -:   37:/**
        -:   38: * Get the native handler of a built-in handler type.
        -:   39: *
        -:   40: * return Function pointer of the handler
        -:   41: */
        -:   42:ecma_builtin_handler_t
    #####:   43:ecma_builtin_handler_get (ecma_native_handler_id_t id) /**< handler id */
        -:   44:{
    #####:   45:  JERRY_ASSERT (id != ECMA_NATIVE_HANDLER_START && id < ECMA_NATIVE_HANDLER__COUNT);
    #####:   46:  return ecma_native_handlers[id - 1];
        -:   47:} /* ecma_builtin_handler_get */
        -:   48:
        -:   49:/**
        -:   50: * Get the initial 'length' value of a built-in handler type.
        -:   51: *
        -:   52: * return 'length' value of the handler
        -:   53: */
        -:   54:uint8_t
    #####:   55:ecma_builtin_handler_get_length (ecma_native_handler_id_t id) /**< handler id */
        -:   56:{
    #####:   57:  JERRY_ASSERT (id != ECMA_NATIVE_HANDLER_START && id < ECMA_NATIVE_HANDLER__COUNT);
    #####:   58:  return ecma_native_handler_lengths[id - 1];
        -:   59:} /* ecma_builtin_handler_get_length */
        -:   60:
        -:   61:#endif /* JERRY_ESNEXT */
