        -:    0:Source:/home/workspace/tests/unit-core/test-context-data.c
        -:    0:Programs:299
        -:    1:/* Copyright JS Foundation and other contributors, http://js.foundation
        -:    2: *
        -:    3: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    4: * you may not use this file except in compliance with the License.
        -:    5: * You may obtain a copy of the License at
        -:    6: *
        -:    7: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    8: *
        -:    9: * Unless required by applicable law or agreed to in writing, software
        -:   10: * distributed under the License is distributed on an "AS IS" BASIS
        -:   11: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12: * See the License for the specific language governing permissions and
        -:   13: * limitations under the License.
        -:   14: */
        -:   15:
        -:   16:#include "jerryscript.h"
        -:   17:
        -:   18:#include "config.h"
        -:   19:#include "test-common.h"
        -:   20:
        -:   21:static bool test_context_data1_new_called = false;
        -:   22:static bool test_context_data2_new_called = false;
        -:   23:static bool test_context_data3_new_called = false;
        -:   24:static bool test_context_data4_new_called = false;
        -:   25:static bool test_context_data1_free_called = false;
        -:   26:static bool test_context_data2_free_called = false;
        -:   27:static bool test_context_data4_free_called = false;
        -:   28:static bool test_context_data1_finalize_called = false;
        -:   29:static bool test_context_data4_finalize_called = false;
        -:   30:
        -:   31:/* Context item 1 */
        -:   32:const char *string1 = "item1";
        -:   33:
        -:   34:static void
    #####:   35:test_context_data1_new (void *user_data_p)
        -:   36:{
    #####:   37:  test_context_data1_new_called = true;
    #####:   38:  *((const char **) user_data_p) = string1;
    #####:   39:} /* test_context_data1_new */
        -:   40:
        -:   41:static void
    #####:   42:test_context_data1_free (void *user_data_p)
        -:   43:{
    #####:   44:  test_context_data1_free_called = true;
    #####:   45:  TEST_ASSERT ((*(const char **) user_data_p) == string1);
    #####:   46:  TEST_ASSERT (!test_context_data1_finalize_called);
    #####:   47:} /* test_context_data1_free */
        -:   48:
        -:   49:static void
    #####:   50:test_context_data1_finalize (void *user_data_p)
        -:   51:{
    #####:   52:  TEST_ASSERT (test_context_data1_free_called);
    #####:   53:  TEST_ASSERT (!test_context_data1_finalize_called);
    #####:   54:  TEST_ASSERT ((*(const char **) user_data_p) == string1);
    #####:   55:  test_context_data1_finalize_called = true;
    #####:   56:} /* test_context_data1_finalize */
        -:   57:
        -:   58:static const jerry_context_data_manager_t manager1 = { .init_cb = test_context_data1_new,
        -:   59:                                                       .deinit_cb = test_context_data1_free,
        -:   60:                                                       .finalize_cb = test_context_data1_finalize,
        -:   61:                                                       .bytes_needed = sizeof (const char *) };
        -:   62:
        -:   63:/* Context item 2 */
        -:   64:const char *string2 = "item2";
        -:   65:
        -:   66:static void
    #####:   67:test_context_data2_new (void *user_data_p)
        -:   68:{
    #####:   69:  test_context_data2_new_called = true;
    #####:   70:  *((const char **) user_data_p) = string2;
    #####:   71:} /* test_context_data2_new */
        -:   72:
        -:   73:static void
    #####:   74:test_context_data2_free (void *user_data_p)
        -:   75:{
    #####:   76:  test_context_data2_free_called = true;
    #####:   77:  TEST_ASSERT ((*(const char **) user_data_p) == string2);
    #####:   78:} /* test_context_data2_free */
        -:   79:
        -:   80:static const jerry_context_data_manager_t manager2 = { .init_cb = test_context_data2_new,
        -:   81:                                                       .deinit_cb = test_context_data2_free,
        -:   82:                                                       .bytes_needed = sizeof (const char *) };
        -:   83:
        -:   84:/* Context item 3 */
        -:   85:
        -:   86:static void
    #####:   87:test_context_data3_new (void *user_data_p)
        -:   88:{
        -:   89:  JERRY_UNUSED (user_data_p);
    #####:   90:  test_context_data3_new_called = true;
    #####:   91:} /* test_context_data3_new */
        -:   92:
        -:   93:static const jerry_context_data_manager_t manager3 = {
        -:   94:  .init_cb = test_context_data3_new,
        -:   95:  /* NULL is allowed: */
        -:   96:  .deinit_cb = NULL,
        -:   97:  .finalize_cb = NULL,
        -:   98:  .bytes_needed = 0,
        -:   99:};
        -:  100:
        -:  101:/* Context item 4 */
        -:  102:
        -:  103:static void
    #####:  104:test_context_data4_new (void *user_data_p)
        -:  105:{
    #####:  106:  test_context_data4_new_called = true;
    #####:  107:  TEST_ASSERT (user_data_p == NULL);
    #####:  108:} /* test_context_data4_new */
        -:  109:
        -:  110:static void
    #####:  111:test_context_data4_free (void *user_data_p)
        -:  112:{
    #####:  113:  test_context_data4_free_called = true;
    #####:  114:  TEST_ASSERT (user_data_p == NULL);
    #####:  115:  TEST_ASSERT (!test_context_data4_finalize_called);
    #####:  116:} /* test_context_data4_free */
        -:  117:
        -:  118:static void
    #####:  119:test_context_data4_finalize (void *user_data_p)
        -:  120:{
    #####:  121:  TEST_ASSERT (!test_context_data4_finalize_called);
    #####:  122:  test_context_data4_finalize_called = true;
    #####:  123:  TEST_ASSERT (user_data_p == NULL);
    #####:  124:} /* test_context_data4_finalize */
        -:  125:
        -:  126:static const jerry_context_data_manager_t manager4 = { .init_cb = test_context_data4_new,
        -:  127:                                                       .deinit_cb = test_context_data4_free,
        -:  128:                                                       .finalize_cb = test_context_data4_finalize,
        -:  129:                                                       .bytes_needed = 0 };
        -:  130:
        -:  131:int
    #####:  132:main (void)
        -:  133:{
    #####:  134:  TEST_INIT ();
        -:  135:
    #####:  136:  jerry_init (JERRY_INIT_EMPTY);
        -:  137:
    #####:  138:  TEST_ASSERT (!strcmp (*((const char **) jerry_context_data (&manager1)), "item1"));
    #####:  139:  TEST_ASSERT (!strcmp (*((const char **) jerry_context_data (&manager2)), "item2"));
    #####:  140:  TEST_ASSERT (jerry_context_data (&manager3) == NULL);
    #####:  141:  TEST_ASSERT (jerry_context_data (&manager4) == NULL);
        -:  142:
    #####:  143:  TEST_ASSERT (test_context_data1_new_called);
    #####:  144:  TEST_ASSERT (test_context_data2_new_called);
    #####:  145:  TEST_ASSERT (test_context_data3_new_called);
    #####:  146:  TEST_ASSERT (test_context_data4_new_called);
        -:  147:
    #####:  148:  TEST_ASSERT (!test_context_data1_free_called);
    #####:  149:  TEST_ASSERT (!test_context_data2_free_called);
    #####:  150:  TEST_ASSERT (!test_context_data4_free_called);
        -:  151:
    #####:  152:  jerry_cleanup ();
        -:  153:
    #####:  154:  TEST_ASSERT (test_context_data1_free_called);
    #####:  155:  TEST_ASSERT (test_context_data2_free_called);
    #####:  156:  TEST_ASSERT (test_context_data4_free_called);
        -:  157:
    #####:  158:  TEST_ASSERT (test_context_data1_finalize_called);
    #####:  159:  TEST_ASSERT (test_context_data4_finalize_called);
        -:  160:
        -:  161:  return 0;
        -:  162:} /* main */
