        -:    0:Source:/home/workspace/tests/unit-core/test-has-property.c
        -:    0:Programs:299
        -:    1:/* Copyright JS Foundation and other contributors, http://js.foundation
        -:    2: *
        -:    3: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    4: * you may not use this file except in compliance with the License.
        -:    5: * You may obtain a copy of the License at
        -:    6: *
        -:    7: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    8: *
        -:    9: * Unless required by applicable law or agreed to in writing, software
        -:   10: * distributed under the License is distributed on an "AS IS" BASIS
        -:   11: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12: * See the License for the specific language governing permissions and
        -:   13: * limitations under the License.
        -:   14: */
        -:   15:
        -:   16:#include "jerryscript.h"
        -:   17:
        -:   18:#include "config.h"
        -:   19:#include "test-common.h"
        -:   20:
        -:   21:static void
    #####:   22:assert_boolean_and_release (jerry_value_t result, bool expected)
        -:   23:{
    #####:   24:  TEST_ASSERT (jerry_value_is_boolean (result));
    #####:   25:  TEST_ASSERT (jerry_value_is_true (result) == expected);
    #####:   26:  jerry_value_free (result);
    #####:   27:} /* assert_boolean_and_release */
        -:   28:
        -:   29:int
    #####:   30:main (void)
        -:   31:{
    #####:   32:  TEST_INIT ();
        -:   33:
    #####:   34:  jerry_init (JERRY_INIT_EMPTY);
        -:   35:
    #####:   36:  jerry_value_t object = jerry_object ();
    #####:   37:  jerry_value_t prop_name = jerry_string_sz ("something");
    #####:   38:  jerry_value_t prop_value = jerry_boolean (true);
    #####:   39:  jerry_value_t proto_object = jerry_object ();
        -:   40:
        -:   41:  /* Assert that an empty object does not have the property in question */
    #####:   42:  assert_boolean_and_release (jerry_object_has (object, prop_name), false);
    #####:   43:  assert_boolean_and_release (jerry_object_has_own (object, prop_name), false);
        -:   44:
    #####:   45:  assert_boolean_and_release (jerry_object_set_proto (object, proto_object), true);
        -:   46:
        -:   47:  /* If the object has a prototype, that still means it doesn't have the property */
    #####:   48:  assert_boolean_and_release (jerry_object_has (object, prop_name), false);
    #####:   49:  assert_boolean_and_release (jerry_object_has_own (object, prop_name), false);
        -:   50:
    #####:   51:  assert_boolean_and_release (jerry_object_set (proto_object, prop_name, prop_value), true);
        -:   52:
        -:   53:  /* After setting the property on the prototype, it must be there, but not on the object */
    #####:   54:  assert_boolean_and_release (jerry_object_has (object, prop_name), true);
    #####:   55:  assert_boolean_and_release (jerry_object_has_own (object, prop_name), false);
        -:   56:
    #####:   57:  TEST_ASSERT (jerry_value_is_true (jerry_object_delete (proto_object, prop_name)));
    #####:   58:  assert_boolean_and_release (jerry_object_set (object, prop_name, prop_value), true);
        -:   59:
        -:   60:  /* After relocating the property onto the object, it must be there */
    #####:   61:  assert_boolean_and_release (jerry_object_has (object, prop_name), true);
    #####:   62:  assert_boolean_and_release (jerry_object_has_own (object, prop_name), true);
        -:   63:
    #####:   64:  jerry_value_free (object);
    #####:   65:  jerry_value_free (prop_name);
    #####:   66:  jerry_value_free (prop_value);
    #####:   67:  jerry_value_free (proto_object);
        -:   68:
    #####:   69:  jerry_cleanup ();
        -:   70:
        -:   71:  return 0;
        -:   72:} /* main */
