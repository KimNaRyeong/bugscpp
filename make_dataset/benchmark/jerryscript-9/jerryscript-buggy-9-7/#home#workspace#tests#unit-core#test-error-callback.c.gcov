        -:    0:Source:/home/workspace/tests/unit-core/test-error-callback.c
        -:    0:Programs:297
        -:    1:/* Copyright JS Foundation and other contributors, http://js.foundation
        -:    2: *
        -:    3: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    4: * you may not use this file except in compliance with the License.
        -:    5: * You may obtain a copy of the License at
        -:    6: *
        -:    7: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    8: *
        -:    9: * Unless required by applicable law or agreed to in writing, software
        -:   10: * distributed under the License is distributed on an "AS IS" BASIS
        -:   11: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12: * See the License for the specific language governing permissions and
        -:   13: * limitations under the License.
        -:   14: */
        -:   15:
        -:   16:#include "jerryscript.h"
        -:   17:
        -:   18:#include "test-common.h"
        -:   19:
        -:   20:static bool error_object_created_callback_is_running = false;
        -:   21:static int error_object_created_callback_count = 0;
        -:   22:
        -:   23:static void
    #####:   24:error_object_created_callback (const jerry_value_t error_object_t, /**< new error object */
        -:   25:                               void *user_p) /**< user pointer */
        -:   26:{
    #####:   27:  TEST_ASSERT (!error_object_created_callback_is_running);
    #####:   28:  TEST_ASSERT (user_p == (void *) &error_object_created_callback_count);
        -:   29:
    #####:   30:  error_object_created_callback_is_running = true;
    #####:   31:  error_object_created_callback_count++;
        -:   32:
    #####:   33:  jerry_value_t name = jerry_string_sz ("message");
    #####:   34:  jerry_value_t message = jerry_string_sz ("Replaced message!");
        -:   35:
    #####:   36:  jerry_value_t result = jerry_object_set (error_object_t, name, message);
    #####:   37:  TEST_ASSERT (jerry_value_is_boolean (result) && jerry_value_is_true (result));
    #####:   38:  jerry_value_free (result);
        -:   39:
        -:   40:  /* This SyntaxError must not trigger a recusrsive call of the this callback. */
    #####:   41:  const char *source_p = "Syntax Error in JS!";
    #####:   42:  result = jerry_eval ((const jerry_char_t *) source_p, strlen (source_p), 0);
    #####:   43:  TEST_ASSERT (jerry_value_is_exception (result));
        -:   44:
    #####:   45:  jerry_value_free (result);
    #####:   46:  jerry_value_free (message);
    #####:   47:  jerry_value_free (name);
        -:   48:
    #####:   49:  error_object_created_callback_is_running = false;
    #####:   50:} /* error_object_created_callback */
        -:   51:
        -:   52:static void
    #####:   53:run_test (const char *source_p)
        -:   54:{
        -:   55:  /* Run the code 5 times. */
    #####:   56:  for (int i = 0; i < 5; i++)
        -:   57:  {
    #####:   58:    jerry_value_t result = jerry_eval ((const jerry_char_t *) source_p, strlen (source_p), 0);
    #####:   59:    TEST_ASSERT (jerry_value_is_boolean (result) && jerry_value_is_true (result));
    #####:   60:    jerry_value_free (result);
        -:   61:  }
    #####:   62:} /* run_test */
        -:   63:
        -:   64:/**
        -:   65: * Unit test's main function.
        -:   66: */
        -:   67:int
    #####:   68:main (void)
        -:   69:{
    #####:   70:  TEST_INIT ();
        -:   71:
    #####:   72:  jerry_init (JERRY_INIT_EMPTY);
        -:   73:
    #####:   74:  jerry_error_on_created (error_object_created_callback, (void *) &error_object_created_callback_count);
        -:   75:
    #####:   76:  run_test ("var result = false\n"
        -:   77:            "try {\n"
        -:   78:            "  ref_error;\n"
        -:   79:            "} catch(e) {\n"
        -:   80:            "  result = (e.message === 'Replaced message!')\n"
        -:   81:            "}\n"
        -:   82:            "result\n");
        -:   83:
    #####:   84:  run_test ("var error = new Error()\n"
        -:   85:            "error.message === 'Replaced message!'\n");
        -:   86:
    #####:   87:  jerry_value_free (jerry_error_sz (JERRY_ERROR_COMMON, "Message"));
        -:   88:
    #####:   89:  TEST_ASSERT (error_object_created_callback_count == 11);
        -:   90:
    #####:   91:  jerry_cleanup ();
        -:   92:  return 0;
        -:   93:} /* main */
