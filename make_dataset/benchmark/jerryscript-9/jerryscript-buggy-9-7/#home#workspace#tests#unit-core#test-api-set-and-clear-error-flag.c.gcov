        -:    0:Source:/home/workspace/tests/unit-core/test-api-set-and-clear-error-flag.c
        -:    0:Programs:297
        -:    1:/* Copyright JS Foundation and other contributors, http://js.foundation
        -:    2: *
        -:    3: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    4: * you may not use this file except in compliance with the License.
        -:    5: * You may obtain a copy of the License at
        -:    6: *
        -:    7: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    8: *
        -:    9: * Unless required by applicable law or agreed to in writing, software
        -:   10: * distributed under the License is distributed on an "AS IS" BASIS
        -:   11: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12: * See the License for the specific language governing permissions and
        -:   13: * limitations under the License.
        -:   14: */
        -:   15:
        -:   16:#include "jerryscript.h"
        -:   17:
        -:   18:#include "test-common.h"
        -:   19:
        -:   20:static void
    #####:   21:compare_str (jerry_value_t value, const char *str_p, size_t str_len)
    #####:   22:{
    #####:   23:  jerry_size_t size = jerry_string_size (value, JERRY_ENCODING_CESU8);
    #####:   24:  TEST_ASSERT (str_len == size);
    #####:   25:  JERRY_VLA (jerry_char_t, str_buff, size);
    #####:   26:  jerry_string_to_buffer (value, JERRY_ENCODING_CESU8, str_buff, size);
    #####:   27:  TEST_ASSERT (!memcmp (str_p, str_buff, str_len));
    #####:   28:} /* compare_str */
        -:   29:
        -:   30:int
    #####:   31:main (void)
        -:   32:{
    #####:   33:  TEST_INIT ();
        -:   34:
    #####:   35:  jerry_init (JERRY_INIT_EMPTY);
        -:   36:
    #####:   37:  jerry_value_t obj_val = jerry_object ();
    #####:   38:  obj_val = jerry_throw_value (obj_val, true);
    #####:   39:  jerry_value_t err_val = jerry_value_copy (obj_val);
        -:   40:
    #####:   41:  obj_val = jerry_exception_value (err_val, true);
        -:   42:
    #####:   43:  TEST_ASSERT (obj_val != err_val);
    #####:   44:  jerry_value_free (err_val);
    #####:   45:  jerry_value_free (obj_val);
        -:   46:
    #####:   47:  const char pterodactylus[] = "Pterodactylus";
    #####:   48:  const size_t pterodactylus_size = sizeof (pterodactylus) - 1;
        -:   49:
    #####:   50:  jerry_value_t str = jerry_string_sz (pterodactylus);
    #####:   51:  jerry_value_t error = jerry_throw_value (str, true);
    #####:   52:  str = jerry_exception_value (error, true);
        -:   53:
    #####:   54:  compare_str (str, pterodactylus, pterodactylus_size);
    #####:   55:  jerry_value_free (str);
        -:   56:
    #####:   57:  str = jerry_string_sz (pterodactylus);
    #####:   58:  error = jerry_throw_value (str, false);
    #####:   59:  jerry_value_free (str);
    #####:   60:  str = jerry_exception_value (error, true);
        -:   61:
    #####:   62:  compare_str (str, pterodactylus, pterodactylus_size);
    #####:   63:  jerry_value_free (str);
        -:   64:
    #####:   65:  str = jerry_string_sz (pterodactylus);
    #####:   66:  error = jerry_throw_abort (str, true);
    #####:   67:  str = jerry_exception_value (error, true);
        -:   68:
    #####:   69:  compare_str (str, pterodactylus, pterodactylus_size);
    #####:   70:  jerry_value_free (str);
        -:   71:
    #####:   72:  str = jerry_string_sz (pterodactylus);
    #####:   73:  error = jerry_throw_abort (str, false);
    #####:   74:  jerry_value_free (str);
    #####:   75:  str = jerry_exception_value (error, true);
        -:   76:
    #####:   77:  compare_str (str, pterodactylus, pterodactylus_size);
    #####:   78:  jerry_value_free (str);
        -:   79:
    #####:   80:  str = jerry_string_sz (pterodactylus);
    #####:   81:  error = jerry_throw_value (str, true);
    #####:   82:  error = jerry_throw_abort (error, true);
    #####:   83:  TEST_ASSERT (jerry_value_is_abort (error));
    #####:   84:  str = jerry_exception_value (error, true);
        -:   85:
    #####:   86:  compare_str (str, pterodactylus, pterodactylus_size);
    #####:   87:  jerry_value_free (str);
        -:   88:
    #####:   89:  str = jerry_string_sz (pterodactylus);
    #####:   90:  error = jerry_throw_value (str, true);
    #####:   91:  jerry_value_t error2 = jerry_throw_abort (error, false);
    #####:   92:  TEST_ASSERT (jerry_value_is_abort (error2));
    #####:   93:  jerry_value_free (error);
    #####:   94:  str = jerry_exception_value (error2, true);
        -:   95:
    #####:   96:  compare_str (str, pterodactylus, pterodactylus_size);
    #####:   97:  jerry_value_free (str);
        -:   98:
    #####:   99:  double test_num = 3.1415926;
    #####:  100:  jerry_value_t num = jerry_number (test_num);
    #####:  101:  jerry_value_t num2 = jerry_throw_value (num, false);
    #####:  102:  TEST_ASSERT (jerry_value_is_exception (num2));
    #####:  103:  jerry_value_free (num);
    #####:  104:  num2 = jerry_exception_value (num2, true);
    #####:  105:  TEST_ASSERT (jerry_value_as_number (num2) == test_num);
    #####:  106:  jerry_value_free (num2);
        -:  107:
    #####:  108:  num = jerry_number (test_num);
    #####:  109:  num2 = jerry_throw_value (num, true);
    #####:  110:  TEST_ASSERT (jerry_value_is_exception (num2));
    #####:  111:  num2 = jerry_exception_value (num2, true);
    #####:  112:  TEST_ASSERT (jerry_value_as_number (num2) == test_num);
    #####:  113:  jerry_value_free (num2);
        -:  114:
    #####:  115:  num = jerry_number (test_num);
    #####:  116:  num2 = jerry_throw_value (num, false);
    #####:  117:  TEST_ASSERT (jerry_value_is_exception (num2));
    #####:  118:  jerry_value_free (num);
    #####:  119:  jerry_value_t num3 = jerry_throw_value (num2, false);
    #####:  120:  TEST_ASSERT (jerry_value_is_exception (num3));
    #####:  121:  jerry_value_free (num2);
    #####:  122:  num2 = jerry_exception_value (num3, true);
    #####:  123:  TEST_ASSERT (jerry_value_as_number (num2) == test_num);
    #####:  124:  jerry_value_free (num2);
        -:  125:
    #####:  126:  num = jerry_number (test_num);
    #####:  127:  num2 = jerry_throw_value (num, true);
    #####:  128:  TEST_ASSERT (jerry_value_is_exception (num2));
    #####:  129:  num3 = jerry_throw_value (num2, true);
    #####:  130:  TEST_ASSERT (jerry_value_is_exception (num3));
    #####:  131:  num2 = jerry_exception_value (num3, true);
    #####:  132:  TEST_ASSERT (jerry_value_as_number (num2) == test_num);
    #####:  133:  jerry_value_free (num2);
        -:  134:
    #####:  135:  num = jerry_number (test_num);
    #####:  136:  error = jerry_throw_abort (num, true);
    #####:  137:  TEST_ASSERT (jerry_value_is_abort (error));
    #####:  138:  num2 = jerry_throw_value (error, true);
    #####:  139:  TEST_ASSERT (jerry_value_is_exception (num2));
    #####:  140:  num = jerry_exception_value (num2, true);
    #####:  141:  TEST_ASSERT (jerry_value_as_number (num) == test_num);
    #####:  142:  jerry_value_free (num);
        -:  143:
    #####:  144:  num = jerry_number (test_num);
    #####:  145:  error = jerry_throw_abort (num, false);
    #####:  146:  jerry_value_free (num);
    #####:  147:  TEST_ASSERT (jerry_value_is_abort (error));
    #####:  148:  num2 = jerry_throw_value (error, true);
    #####:  149:  TEST_ASSERT (jerry_value_is_exception (num2));
    #####:  150:  num = jerry_exception_value (num2, true);
    #####:  151:  TEST_ASSERT (jerry_value_as_number (num) == test_num);
    #####:  152:  jerry_value_free (num);
        -:  153:
    #####:  154:  num = jerry_number (test_num);
    #####:  155:  error = jerry_throw_abort (num, true);
    #####:  156:  TEST_ASSERT (jerry_value_is_abort (error));
    #####:  157:  num2 = jerry_throw_value (error, false);
    #####:  158:  jerry_value_free (error);
    #####:  159:  TEST_ASSERT (jerry_value_is_exception (num2));
    #####:  160:  num = jerry_exception_value (num2, true);
    #####:  161:  TEST_ASSERT (jerry_value_as_number (num) == test_num);
    #####:  162:  jerry_value_free (num);
        -:  163:
    #####:  164:  num = jerry_number (test_num);
    #####:  165:  error = jerry_throw_abort (num, false);
    #####:  166:  jerry_value_free (num);
    #####:  167:  TEST_ASSERT (jerry_value_is_abort (error));
    #####:  168:  num2 = jerry_throw_value (error, false);
    #####:  169:  jerry_value_free (error);
    #####:  170:  TEST_ASSERT (jerry_value_is_exception (num2));
    #####:  171:  num = jerry_exception_value (num2, true);
    #####:  172:  TEST_ASSERT (jerry_value_as_number (num) == test_num);
    #####:  173:  jerry_value_free (num);
        -:  174:
    #####:  175:  jerry_value_t value = jerry_number (42);
    #####:  176:  value = jerry_exception_value (value, true);
    #####:  177:  jerry_value_free (value);
        -:  178:
    #####:  179:  value = jerry_number (42);
    #####:  180:  jerry_value_t value2 = jerry_exception_value (value, false);
    #####:  181:  jerry_value_free (value);
    #####:  182:  jerry_value_free (value2);
        -:  183:
    #####:  184:  value = jerry_number (42);
    #####:  185:  error = jerry_throw_value (value, true);
    #####:  186:  error = jerry_throw_value (error, true);
    #####:  187:  jerry_value_free (error);
        -:  188:
    #####:  189:  value = jerry_number (42);
    #####:  190:  error = jerry_throw_abort (value, true);
    #####:  191:  error = jerry_throw_abort (error, true);
    #####:  192:  jerry_value_free (error);
        -:  193:
    #####:  194:  value = jerry_number (42);
    #####:  195:  error = jerry_throw_value (value, true);
    #####:  196:  error2 = jerry_throw_value (error, false);
    #####:  197:  jerry_value_free (error);
    #####:  198:  jerry_value_free (error2);
        -:  199:
    #####:  200:  value = jerry_number (42);
    #####:  201:  error = jerry_throw_abort (value, true);
    #####:  202:  error2 = jerry_throw_abort (error, false);
    #####:  203:  jerry_value_free (error);
    #####:  204:  jerry_value_free (error2);
        -:  205:
    #####:  206:  jerry_cleanup ();
        -:  207:} /* main */
