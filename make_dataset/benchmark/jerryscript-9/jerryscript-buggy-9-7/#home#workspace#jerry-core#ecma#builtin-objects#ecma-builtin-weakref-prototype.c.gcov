        -:    0:Source:/home/workspace/jerry-core/ecma/builtin-objects/ecma-builtin-weakref-prototype.c
        -:    0:Programs:297
        -:    1:/* Copyright JS Foundation and other contributors, http://js.foundation
        -:    2: *
        -:    3: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    4: * you may not use this file except in compliance with the License.
        -:    5: * You may obtain a copy of the License at
        -:    6: *
        -:    7: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    8: *
        -:    9: * Unless required by applicable law or agreed to in writing, software
        -:   10: * distributed under the License is distributed on an "AS IS" BASIS
        -:   11: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12: * See the License for the specific language governing permissions and
        -:   13: * limitations under the License.
        -:   14: */
        -:   15:
        -:   16:#include "ecma-container-object.h"
        -:   17:#include "ecma-exceptions.h"
        -:   18:
        -:   19:#if JERRY_BUILTIN_WEAKREF
        -:   20:
        -:   21:#define ECMA_BUILTINS_INTERNAL
        -:   22:#include "ecma-builtins-internal.h"
        -:   23:
        -:   24:/**
        -:   25: * This object has a custom dispatch function.
        -:   26: */
        -:   27:#define BUILTIN_CUSTOM_DISPATCH
        -:   28:
        -:   29:/**
        -:   30: * List of built-in routine identifiers.
        -:   31: */
        -:   32:enum
        -:   33:{
        -:   34:  ECMA_BUILTIN_WEAKREF_PROTOTYPE_OBJECT_ROUTINE_START = 0,
        -:   35:  ECMA_BUILTIN_WEAKREF_PROTOTYPE_OBJECT_DEREF
        -:   36:};
        -:   37:
        -:   38:/**
        -:   39: * This object has a custom dispatch function.
        -:   40: */
        -:   41:#define BUILTIN_INC_HEADER_NAME "ecma-builtin-weakref-prototype.inc.h"
        -:   42:#define BUILTIN_UNDERSCORED_ID  weakref_prototype
        -:   43:#include "ecma-builtin-internal-routines-template.inc.h"
        -:   44:
        -:   45:/** \addtogroup ecma ECMA
        -:   46: * @{
        -:   47: *
        -:   48: * \addtogroup ecmabuiltins
        -:   49: * @{
        -:   50: *
        -:   51: * \addtogroup weakref ECMA WeakRef object built-in
        -:   52: * @{
        -:   53: */
        -:   54:
        -:   55:/**
        -:   56: * Deref checks weakRef target
        -:   57: *
        -:   58: * @return weakRef target
        -:   59: *         error - otherwise
        -:   60: */
        -:   61:static ecma_value_t
    #####:   62:ecma_builtin_weakref_prototype_object_deref (ecma_value_t this_arg) /**< this argument */
        -:   63:{
    #####:   64:  if (!ecma_is_value_object (this_arg))
        -:   65:  {
    #####:   66:    return ecma_raise_type_error (ECMA_ERR_TARGET_IS_NOT_OBJECT);
        -:   67:  }
        -:   68:
    #####:   69:  ecma_object_t *object_p = ecma_get_object_from_value (this_arg);
    #####:   70:  ecma_extended_object_t *this_ext_obj = (ecma_extended_object_t *) object_p;
        -:   71:
    #####:   72:  if (!ecma_object_class_is (object_p, ECMA_OBJECT_CLASS_WEAKREF))
        -:   73:  {
    #####:   74:    return ecma_raise_type_error (ECMA_ERR_TARGET_IS_NOT_WEAKREF);
        -:   75:  }
        -:   76:
    #####:   77:  return ecma_copy_value (this_ext_obj->u.cls.u3.target);
        -:   78:} /* ecma_builtin_weakref_prototype_object_deref */
        -:   79:
        -:   80:/**
        -:   81: * Dispatcher of the built-in's routines
        -:   82: *
        -:   83: * @return ecma value
        -:   84: *         Returned value must be freed with ecma_free_value.
        -:   85: */
        -:   86:ecma_value_t
    #####:   87:ecma_builtin_weakref_prototype_dispatch_routine (uint8_t builtin_routine_id, /**< built-in routine identifier */
        -:   88:                                                 ecma_value_t this_arg, /**< 'this' argument value */
        -:   89:                                                 const ecma_value_t arguments_list_p[], /**< list of arguments
        -:   90:                                                                                         *   passed to routine */
        -:   91:                                                 uint32_t arguments_number) /**< length of arguments' list */
        -:   92:{
        -:   93:  JERRY_UNUSED_2 (arguments_list_p, arguments_number);
        -:   94:
    #####:   95:  switch (builtin_routine_id)
        -:   96:  {
    #####:   97:    case ECMA_BUILTIN_WEAKREF_PROTOTYPE_OBJECT_DEREF:
        -:   98:    {
    #####:   99:      return ecma_builtin_weakref_prototype_object_deref (this_arg);
        -:  100:    }
    #####:  101:    default:
        -:  102:    {
    #####:  103:      JERRY_UNREACHABLE ();
        -:  104:    }
        -:  105:  }
        -:  106:} /* ecma_builtin_weakref_prototype_dispatch_routine */
        -:  107:
        -:  108:/**
        -:  109: * @}
        -:  110: * @}
        -:  111: * @}
        -:  112: */
        -:  113:
        -:  114:#endif /* JERRY_BUILTIN_WEAKREF */
