        -:    0:Source:/home/workspace/jerry-core/ecma/base/ecma-errors.c
        -:    0:Programs:297
        -:    1:/* Copyright JS Foundation and other contributors, http://js.foundation
        -:    2: *
        -:    3: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    4: * you may not use this file except in compliance with the License.
        -:    5: * You may obtain a copy of the License at
        -:    6: *
        -:    7: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    8: *
        -:    9: * Unless required by applicable law or agreed to in writing, software
        -:   10: * distributed under the License is distributed on an "AS IS" BASIS
        -:   11: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12: * See the License for the specific language governing permissions and
        -:   13: * limitations under the License.
        -:   14: */
        -:   15:
        -:   16:#include "ecma-errors.h"
        -:   17:
        -:   18:#if JERRY_ERROR_MESSAGES
        -:   19:/**
        -:   20: * Struct to store ecma error message with its size.
        -:   21: */
        -:   22:typedef struct
        -:   23:{
        -:   24:  char *text; /* Text of ecma error message. */
        -:   25:  uint8_t size; /* Size of ecma error message. */
        -:   26:} ecma_error_message_t;
        -:   27:
        -:   28:/* Error message texts with size. */
        -:   29:static ecma_error_message_t ecma_error_messages[] JERRY_ATTR_CONST_DATA = {
        -:   30:  { "", 0 }, /* ECMA_ERR_EMPTY */
        -:   31:/** @cond doxygen_suppress */
        -:   32:#define ECMA_ERROR_DEF(id, string) { string, sizeof (string) - 1 },
        -:   33:#include "ecma-error-messages.inc.h"
        -:   34:#undef ECMA_ERROR_DEF
        -:   35:  /** @endcond */
        -:   36:};
        -:   37:#endif /* JERRY_ERROR_MESSAGES */
        -:   38:
        -:   39:/**
        -:   40: * Get specified ecma error as zero-terminated string
        -:   41: *
        -:   42: * @return pointer to zero-terminated ecma error
        -:   43: */
        -:   44:const char *
    #####:   45:ecma_get_error_msg (ecma_error_msg_t id) /**< ecma error id */
        -:   46:{
    #####:   47:  JERRY_ASSERT (id != ECMA_IS_VALID_CONSTRUCTOR);
        -:   48:
        -:   49:#if JERRY_ERROR_MESSAGES
    #####:   50:  return ecma_error_messages[id].text;
        -:   51:#else /* !JERRY_ERROR_MESSAGES */
        -:   52:  return NULL;
        -:   53:#endif /* JERRY_ERROR_MESSAGES */
        -:   54:} /* ecma_get_error_msg */
        -:   55:
        -:   56:/**
        -:   57: * Get size of specified ecma error
        -:   58: *
        -:   59: * @return size in bytes
        -:   60: */
        -:   61:lit_utf8_size_t
    #####:   62:ecma_get_error_size (ecma_error_msg_t id) /**< ecma error id */
        -:   63:{
    #####:   64:  JERRY_ASSERT (id != ECMA_IS_VALID_CONSTRUCTOR);
        -:   65:
        -:   66:#if JERRY_ERROR_MESSAGES
    #####:   67:  return ecma_error_messages[id].size;
        -:   68:#else /* !JERRY_ERROR_MESSAGES */
        -:   69:  return 0;
        -:   70:#endif /* JERRY_ERROR_MESSAGES */
        -:   71:} /* ecma_get_error_size */
