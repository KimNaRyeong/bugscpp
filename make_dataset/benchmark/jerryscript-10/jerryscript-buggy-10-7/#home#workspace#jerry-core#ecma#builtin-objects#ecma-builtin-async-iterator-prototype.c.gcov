        -:    0:Source:/home/workspace/jerry-core/ecma/builtin-objects/ecma-builtin-async-iterator-prototype.c
        -:    0:Programs:299
        -:    1:/* Copyright JS Foundation and other contributors, http://js.foundation
        -:    2: *
        -:    3: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    4: * you may not use this file except in compliance with the License.
        -:    5: * You may obtain a copy of the License at
        -:    6: *
        -:    7: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    8: *
        -:    9: * Unless required by applicable law or agreed to in writing, software
        -:   10: * distributed under the License is distributed on an "AS IS" BASIS
        -:   11: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12: * See the License for the specific language governing permissions and
        -:   13: * limitations under the License.
        -:   14: */
        -:   15:
        -:   16:#include "ecma-builtin-helpers.h"
        -:   17:#include "ecma-builtins.h"
        -:   18:#include "ecma-iterator-object.h"
        -:   19:
        -:   20:#if JERRY_ESNEXT
        -:   21:
        -:   22:#define ECMA_BUILTINS_INTERNAL
        -:   23:#include "ecma-builtins-internal.h"
        -:   24:
        -:   25:/**
        -:   26: * This object has a custom dispatch function.
        -:   27: */
        -:   28:#define BUILTIN_CUSTOM_DISPATCH
        -:   29:
        -:   30:/**
        -:   31: * List of built-in routine identifiers.
        -:   32: */
        -:   33:enum
        -:   34:{
        -:   35:  ECMA_BUILTIN_ASYNC_ITERATOR_PROTOTYPE_ROUTINE_START = 0,
        -:   36:  ECMA_BUILTIN_ASYNC_ITERATOR_PROTOTYPE_OBJECT_ASYNC_ITERATOR,
        -:   37:};
        -:   38:
        -:   39:#define BUILTIN_INC_HEADER_NAME "ecma-builtin-async-iterator-prototype.inc.h"
        -:   40:#define BUILTIN_UNDERSCORED_ID  async_iterator_prototype
        -:   41:#include "ecma-builtin-internal-routines-template.inc.h"
        -:   42:
        -:   43:/** \addtogroup ecma ECMA
        -:   44: * @{
        -:   45: *
        -:   46: * \addtogroup ecmabuiltins
        -:   47: * @{
        -:   48: *
        -:   49: * \addtogroup %asynciteratorprototype% ECMA %AsyncIteratorPrototype% object built-in
        -:   50: * @{
        -:   51: */
        -:   52:
        -:   53:/**
        -:   54: * The %AsyncIteratorPrototype% object's '@@asyncIterator' routine
        -:   55: *
        -:   56: * See also:
        -:   57: *          ECMA-262 v10, 25.1.3.1
        -:   58: *
        -:   59: * Note:
        -:   60: *     Returned value must be freed with ecma_free_value.
        -:   61: *
        -:   62: * @return the given this value
        -:   63: */
        -:   64:static ecma_value_t
    #####:   65:ecma_builtin_async_iterator_prototype_object_async_iterator (ecma_value_t this_val) /**< this argument */
        -:   66:{
        -:   67:  /* 1. */
    #####:   68:  return ecma_copy_value (this_val);
        -:   69:} /* ecma_builtin_async_iterator_prototype_object_async_iterator */
        -:   70:
        -:   71:/**
        -:   72: * Dispatcher of the built-in's routines
        -:   73: *
        -:   74: * @return ecma value
        -:   75: *         Returned value must be freed with ecma_free_value.
        -:   76: */
        -:   77:ecma_value_t
    #####:   78:ecma_builtin_async_iterator_prototype_dispatch_routine (uint8_t builtin_routine_id, /**< built-in wide
        -:   79:                                                                                     *   routine identifier */
        -:   80:                                                        ecma_value_t this_arg, /**< 'this' argument value */
        -:   81:                                                        const ecma_value_t arguments_list_p[], /**<
        -:   82:                                                                                                * list of arguments
        -:   83:                                                                                                * passed to routine */
        -:   84:                                                        uint32_t arguments_number) /**< length of arguments' list */
        -:   85:{
        -:   86:  JERRY_UNUSED_2 (arguments_list_p, arguments_number);
        -:   87:
    #####:   88:  switch (builtin_routine_id)
        -:   89:  {
    #####:   90:    case ECMA_BUILTIN_ASYNC_ITERATOR_PROTOTYPE_OBJECT_ASYNC_ITERATOR:
        -:   91:    {
    #####:   92:      return ecma_builtin_async_iterator_prototype_object_async_iterator (this_arg);
        -:   93:    }
    #####:   94:    default:
        -:   95:    {
    #####:   96:      JERRY_UNREACHABLE ();
        -:   97:    }
        -:   98:  }
        -:   99:} /* ecma_builtin_async_iterator_prototype_dispatch_routine */
        -:  100:
        -:  101:/**
        -:  102: * @}
        -:  103: * @}
        -:  104: * @}
        -:  105: */
        -:  106:
        -:  107:#endif /* JERRY_ESNEXT */
