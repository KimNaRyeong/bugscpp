        -:    0:Source:/home/workspace/tests/unit-core/test-from-property-descriptor.c
        -:    0:Programs:299
        -:    1:/* Copyright JS Foundation and other contributors, http://js.foundation
        -:    2: *
        -:    3: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    4: * you may not use this file except in compliance with the License.
        -:    5: * You may obtain a copy of the License at
        -:    6: *
        -:    7: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    8: *
        -:    9: * Unless required by applicable law or agreed to in writing, software
        -:   10: * distributed under the License is distributed on an "AS IS" BASIS
        -:   11: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12: * See the License for the specific language governing permissions and
        -:   13: * limitations under the License.
        -:   14: */
        -:   15:
        -:   16:#include "jerryscript.h"
        -:   17:
        -:   18:#include "config.h"
        -:   19:#include "test-common.h"
        -:   20:
        -:   21:int
    #####:   22:main (void)
        -:   23:{
    #####:   24:  TEST_INIT ();
        -:   25:
    #####:   26:  jerry_init (JERRY_INIT_EMPTY);
        -:   27:
    #####:   28:  jerry_value_t object = jerry_object ();
    #####:   29:  jerry_value_t prop_name = jerry_string_sz ("length");
    #####:   30:  jerry_value_t value = jerry_boolean (true);
        -:   31:
    #####:   32:  TEST_ASSERT (jerry_object_set (object, prop_name, prop_name));
    #####:   33:  TEST_ASSERT (jerry_object_has (object, prop_name));
    #####:   34:  TEST_ASSERT (jerry_object_has_own (object, prop_name));
        -:   35:
        -:   36:  jerry_property_descriptor_t prop_desc;
    #####:   37:  TEST_ASSERT (jerry_object_get_own_prop (object, prop_name, &prop_desc));
        -:   38:
    #####:   39:  jerry_value_t from_object = jerry_property_descriptor_to_object (&prop_desc);
        -:   40:
    #####:   41:  prop_name = jerry_string_sz ("value");
    #####:   42:  value = jerry_object_get (from_object, prop_name);
    #####:   43:  TEST_ASSERT (value == prop_desc.value);
        -:   44:
    #####:   45:  prop_name = jerry_string_sz ("writable");
    #####:   46:  value = jerry_object_get (from_object, prop_name);
    #####:   47:  TEST_ASSERT (jerry_value_is_true (value) == ((prop_desc.flags & JERRY_PROP_IS_WRITABLE) != 0));
        -:   48:
    #####:   49:  prop_name = jerry_string_sz ("enumerable");
    #####:   50:  value = jerry_object_get (from_object, prop_name);
    #####:   51:  TEST_ASSERT (jerry_value_is_true (value) == ((prop_desc.flags & JERRY_PROP_IS_ENUMERABLE) != 0));
        -:   52:
    #####:   53:  prop_name = jerry_string_sz ("configurable");
    #####:   54:  value = jerry_object_get (from_object, prop_name);
    #####:   55:  TEST_ASSERT (jerry_value_is_true (value) == ((prop_desc.flags & JERRY_PROP_IS_CONFIGURABLE) != 0));
        -:   56:
    #####:   57:  jerry_value_free (object);
    #####:   58:  jerry_value_free (prop_name);
    #####:   59:  jerry_value_free (value);
    #####:   60:  jerry_value_free (from_object);
    #####:   61:  jerry_property_descriptor_free (&prop_desc);
        -:   62:
    #####:   63:  prop_desc.flags = JERRY_PROP_IS_CONFIGURABLE;
    #####:   64:  from_object = jerry_property_descriptor_to_object (&prop_desc);
    #####:   65:  TEST_ASSERT (jerry_value_is_exception (from_object));
    #####:   66:  jerry_value_free (from_object);
        -:   67:
    #####:   68:  prop_desc.flags = JERRY_PROP_IS_ENUMERABLE;
    #####:   69:  from_object = jerry_property_descriptor_to_object (&prop_desc);
    #####:   70:  TEST_ASSERT (jerry_value_is_exception (from_object));
    #####:   71:  jerry_value_free (from_object);
        -:   72:
    #####:   73:  prop_desc.flags = JERRY_PROP_IS_WRITABLE;
    #####:   74:  from_object = jerry_property_descriptor_to_object (&prop_desc);
    #####:   75:  TEST_ASSERT (jerry_value_is_exception (from_object));
    #####:   76:  jerry_value_free (from_object);
        -:   77:
    #####:   78:  jerry_cleanup ();
        -:   79:  return 0;
        -:   80:} /* main */
