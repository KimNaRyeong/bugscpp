        -:    0:Source:/home/workspace/tests/unit-core/test-regression-3588.c
        -:    0:Programs:299
        -:    1:/* Copyright JS Foundation and other contributors, http://js.foundation
        -:    2: *
        -:    3: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    4: * you may not use this file except in compliance with the License.
        -:    5: * You may obtain a copy of the License at
        -:    6: *
        -:    7: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    8: *
        -:    9: * Unless required by applicable law or agreed to in writing, software
        -:   10: * distributed under the License is distributed on an "AS IS" BASIS
        -:   11: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12: * See the License for the specific language governing permissions and
        -:   13: * limitations under the License.
        -:   14: */
        -:   15:
        -:   16:#include "jerryscript-port-default.h"
        -:   17:#include "jerryscript-port.h"
        -:   18:#include "jerryscript.h"
        -:   19:
        -:   20:#include "test-common.h"
        -:   21:
        -:   22:/**
        -:   23: * Empty constructor
        -:   24: */
        -:   25:static jerry_value_t
    #####:   26:construct_handler (const jerry_call_info_t *call_info_p, /**< call information */
        -:   27:                   const jerry_value_t args_p[], /**< function arguments */
        -:   28:                   const jerry_length_t args_cnt) /**< number of function arguments */
        -:   29:{
        -:   30:  JERRY_UNUSED (call_info_p);
        -:   31:
    #####:   32:  TEST_ASSERT (args_cnt == 1);
    #####:   33:  TEST_ASSERT (jerry_value_as_number (args_p[0]) == 1.0);
        -:   34:
    #####:   35:  return jerry_undefined ();
        -:   36:} /* construct_handler */
        -:   37:
        -:   38:int
    #####:   39:main (void)
        -:   40:{
        -:   41:  /* Test JERRY_FEATURE_SYMBOL feature as it is a must-have in ES.next */
    #####:   42:  if (!jerry_feature_enabled (JERRY_FEATURE_SYMBOL))
        -:   43:  {
    #####:   44:    jerry_port_log (JERRY_LOG_LEVEL_ERROR, "Skipping test, ES.next support is disabled.\n");
    #####:   45:    return 0;
        -:   46:  }
        -:   47:
    #####:   48:  jerry_init (JERRY_INIT_EMPTY);
        -:   49:
        -:   50:  {
    #####:   51:    jerry_value_t global_obj_val = jerry_current_realm ();
        -:   52:
    #####:   53:    jerry_value_t function_val = jerry_function_external (construct_handler);
    #####:   54:    jerry_value_t function_name_val = jerry_string_sz ("Demo");
    #####:   55:    jerry_value_t result_val = jerry_object_set (global_obj_val, function_name_val, function_val);
    #####:   56:    TEST_ASSERT (!jerry_value_is_exception (result_val));
    #####:   57:    TEST_ASSERT (jerry_value_is_true (result_val));
    #####:   58:    jerry_value_free (result_val);
    #####:   59:    jerry_value_free (function_name_val);
    #####:   60:    jerry_value_free (global_obj_val);
    #####:   61:    jerry_value_free (function_val);
        -:   62:  }
        -:   63:
        -:   64:  {
        -:   65:    static const jerry_char_t test_source[] =
        -:   66:      TEST_STRING_LITERAL ("class Sub1 extends Demo { constructor () { super (1); } };"
        -:   67:                           "new Sub1 ()");
        -:   68:
    #####:   69:    jerry_value_t parsed_code_val = jerry_parse (test_source, sizeof (test_source) - 1, NULL);
    #####:   70:    TEST_ASSERT (!jerry_value_is_exception (parsed_code_val));
        -:   71:
    #####:   72:    jerry_value_t result = jerry_run (parsed_code_val);
    #####:   73:    TEST_ASSERT (!jerry_value_is_exception (result));
        -:   74:
    #####:   75:    jerry_value_free (result);
    #####:   76:    jerry_value_free (parsed_code_val);
        -:   77:  }
        -:   78:
        -:   79:  {
        -:   80:    static const jerry_char_t test_source[] = TEST_STRING_LITERAL ("class Sub2 extends Demo { };"
        -:   81:                                                                   "new Sub2 (1)");
        -:   82:
    #####:   83:    jerry_value_t parsed_code_val = jerry_parse (test_source, sizeof (test_source) - 1, NULL);
    #####:   84:    TEST_ASSERT (!jerry_value_is_exception (parsed_code_val));
        -:   85:
    #####:   86:    jerry_value_t result = jerry_run (parsed_code_val);
    #####:   87:    TEST_ASSERT (!jerry_value_is_exception (result));
        -:   88:
    #####:   89:    jerry_value_free (result);
    #####:   90:    jerry_value_free (parsed_code_val);
        -:   91:  }
        -:   92:
    #####:   93:  jerry_cleanup ();
    #####:   94:  return 0;
        -:   95:} /* main */
