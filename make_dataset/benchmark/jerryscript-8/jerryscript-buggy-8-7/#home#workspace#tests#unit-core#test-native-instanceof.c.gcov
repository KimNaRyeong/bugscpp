        -:    0:Source:/home/workspace/tests/unit-core/test-native-instanceof.c
        -:    0:Programs:299
        -:    1:/* Copyright JS Foundation and other contributors, http://js.foundation
        -:    2: *
        -:    3: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    4: * you may not use this file except in compliance with the License.
        -:    5: * You may obtain a copy of the License at
        -:    6: *
        -:    7: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    8: *
        -:    9: * Unless required by applicable law or agreed to in writing, software
        -:   10: * distributed under the License is distributed on an "AS IS" BASIS
        -:   11: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12: * See the License for the specific language governing permissions and
        -:   13: * limitations under the License.
        -:   14: */
        -:   15:
        -:   16:#include "jerryscript.h"
        -:   17:
        -:   18:#include "test-common.h"
        -:   19:
        -:   20:static const char instanceof_source[] = "var x = function(o, c) {return (o instanceof c);}; x";
        -:   21:
        -:   22:static jerry_value_t
    #####:   23:external_function (const jerry_call_info_t *call_info_p, const jerry_value_t args_p[], const jerry_size_t args_count)
        -:   24:{
        -:   25:  (void) call_info_p;
        -:   26:  (void) args_p;
        -:   27:  (void) args_count;
        -:   28:
    #####:   29:  return jerry_undefined ();
        -:   30:} /* external_function */
        -:   31:
        -:   32:static void
    #####:   33:test_instanceof (jerry_value_t instanceof, jerry_value_t constructor)
        -:   34:{
    #####:   35:  jerry_value_t instance = jerry_construct (constructor, NULL, 0);
    #####:   36:  jerry_value_t args[2] = { instance, constructor };
        -:   37:
    #####:   38:  jerry_value_t undefined = jerry_undefined ();
    #####:   39:  jerry_value_t result = jerry_call (instanceof, undefined, args, 2);
    #####:   40:  jerry_value_free (undefined);
        -:   41:
    #####:   42:  TEST_ASSERT (!jerry_value_is_exception (result));
    #####:   43:  TEST_ASSERT (jerry_value_is_boolean (result));
        -:   44:
    #####:   45:  TEST_ASSERT (jerry_value_is_true (result));
        -:   46:
    #####:   47:  jerry_value_free (instance);
    #####:   48:  jerry_value_free (result);
    #####:   49:} /* test_instanceof */
        -:   50:
        -:   51:int
    #####:   52:main (void)
        -:   53:{
    #####:   54:  jerry_init (JERRY_INIT_EMPTY);
        -:   55:
    #####:   56:  jerry_value_t instanceof = jerry_eval ((jerry_char_t *) instanceof_source, sizeof (instanceof_source) - 1, true);
        -:   57:
        -:   58:  /* Test for a native-backed function. */
    #####:   59:  jerry_value_t constructor = jerry_function_external (external_function);
        -:   60:
    #####:   61:  test_instanceof (instanceof, constructor);
    #####:   62:  jerry_value_free (constructor);
        -:   63:
        -:   64:  /* Test for a JS constructor. */
    #####:   65:  jerry_value_t global = jerry_current_realm ();
    #####:   66:  jerry_value_t object_name = jerry_string_sz ("Object");
    #####:   67:  constructor = jerry_object_get (global, object_name);
    #####:   68:  jerry_value_free (object_name);
    #####:   69:  jerry_value_free (global);
        -:   70:
    #####:   71:  test_instanceof (instanceof, constructor);
    #####:   72:  jerry_value_free (constructor);
        -:   73:
    #####:   74:  jerry_value_free (instanceof);
        -:   75:
    #####:   76:  jerry_cleanup ();
        -:   77:
        -:   78:  return 0;
        -:   79:} /* main */
