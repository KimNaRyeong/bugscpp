        -:    0:Source:/home/workspace/tests/unit-core/test-has-property.c
        -:    0:Programs:274
        -:    1:/* Copyright JS Foundation and other contributors, http://js.foundation
        -:    2: *
        -:    3: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    4: * you may not use this file except in compliance with the License.
        -:    5: * You may obtain a copy of the License at
        -:    6: *
        -:    7: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    8: *
        -:    9: * Unless required by applicable law or agreed to in writing, software
        -:   10: * distributed under the License is distributed on an "AS IS" BASIS
        -:   11: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12: * See the License for the specific language governing permissions and
        -:   13: * limitations under the License.
        -:   14: */
        -:   15:
        -:   16:#include "config.h"
        -:   17:#include "jerryscript.h"
        -:   18:#include "test-common.h"
        -:   19:
        -:   20:static void
    #####:   21:assert_boolean_and_release (jerry_value_t result, bool expected)
        -:   22:{
    #####:   23:  TEST_ASSERT (jerry_value_is_boolean (result));
    #####:   24:  TEST_ASSERT (jerry_get_boolean_value (result) == expected);
    #####:   25:  jerry_release_value (result);
    #####:   26:} /* assert_boolean_and_release */
        -:   27:
        -:   28:int
    #####:   29:main (void)
        -:   30:{
    #####:   31:  TEST_INIT ();
        -:   32:
    #####:   33:  jerry_init (JERRY_INIT_EMPTY);
        -:   34:
    #####:   35:  jerry_value_t object = jerry_create_object ();
    #####:   36:  jerry_value_t prop_name = jerry_create_string_from_utf8 ((jerry_char_t *) "something");
    #####:   37:  jerry_value_t prop_value = jerry_create_boolean (true);
    #####:   38:  jerry_value_t proto_object = jerry_create_object ();
        -:   39:
        -:   40:  /* Assert that an empty object does not have the property in question */
    #####:   41:  assert_boolean_and_release (jerry_has_property (object, prop_name), false);
    #####:   42:  assert_boolean_and_release (jerry_has_own_property (object, prop_name), false);
        -:   43:
    #####:   44:  assert_boolean_and_release (jerry_set_prototype (object, proto_object), true);
        -:   45:
        -:   46:  /* If the object has a prototype, that still means it doesn't have the property */
    #####:   47:  assert_boolean_and_release (jerry_has_property (object, prop_name), false);
    #####:   48:  assert_boolean_and_release (jerry_has_own_property (object, prop_name), false);
        -:   49:
    #####:   50:  assert_boolean_and_release (jerry_set_property (proto_object, prop_name, prop_value), true);
        -:   51:
        -:   52:  /* After setting the property on the prototype, it must be there, but not on the object */
    #####:   53:  assert_boolean_and_release (jerry_has_property (object, prop_name), true);
    #####:   54:  assert_boolean_and_release (jerry_has_own_property (object, prop_name), false);
        -:   55:
    #####:   56:  TEST_ASSERT (jerry_delete_property (proto_object, prop_name));
    #####:   57:  assert_boolean_and_release (jerry_set_property (object, prop_name, prop_value), true);
        -:   58:
        -:   59:  /* After relocating the property onto the object, it must be there */
    #####:   60:  assert_boolean_and_release (jerry_has_property (object, prop_name), true);
    #####:   61:  assert_boolean_and_release (jerry_has_own_property (object, prop_name), true);
        -:   62:
    #####:   63:  jerry_release_value (object);
    #####:   64:  jerry_release_value (prop_name);
    #####:   65:  jerry_release_value (prop_value);
    #####:   66:  jerry_release_value (proto_object);
        -:   67:
    #####:   68:  jerry_cleanup ();
        -:   69:
    #####:   70:  return 0;
        -:   71:} /* main */
