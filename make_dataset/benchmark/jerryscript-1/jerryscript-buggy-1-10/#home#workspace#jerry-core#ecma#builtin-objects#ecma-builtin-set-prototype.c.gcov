        -:    0:Source:/home/workspace/jerry-core/ecma/builtin-objects/ecma-builtin-set-prototype.c
        -:    0:Programs:274
        -:    1:/* Copyright JS Foundation and other contributors, http://js.foundation
        -:    2: *
        -:    3: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    4: * you may not use this file except in compliance with the License.
        -:    5: * You may obtain a copy of the License at
        -:    6: *
        -:    7: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    8: *
        -:    9: * Unless required by applicable law or agreed to in writing, software
        -:   10: * distributed under the License is distributed on an "AS IS" BASIS
        -:   11: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12: * See the License for the specific language governing permissions and
        -:   13: * limitations under the License.
        -:   14: */
        -:   15:
        -:   16:#include "ecma-container-object.h"
        -:   17:
        -:   18:#if ENABLED (JERRY_ES2015_BUILTIN_SET)
        -:   19:
        -:   20:#define ECMA_BUILTINS_INTERNAL
        -:   21:#include "ecma-builtins-internal.h"
        -:   22:
        -:   23:#define BUILTIN_INC_HEADER_NAME "ecma-builtin-set-prototype.inc.h"
        -:   24:#define BUILTIN_UNDERSCORED_ID set_prototype
        -:   25:#include "ecma-builtin-internal-routines-template.inc.h"
        -:   26:
        -:   27:/** \addtogroup ecma ECMA
        -:   28: * @{
        -:   29: *
        -:   30: * \addtogroup ecmabuiltins
        -:   31: * @{
        -:   32: *
        -:   33: * \addtogroup set ECMA Set object built-in
        -:   34: * @{
        -:   35: */
        -:   36:
        -:   37:/**
        -:   38: * The Set.prototype object's 'add' routine
        -:   39: *
        -:   40: * See also:
        -:   41: *          ECMA-262 v6, 23.2.3.1
        -:   42: *
        -:   43: * @return ecma value
        -:   44: *         Returned value must be freed with ecma_free_value.
        -:   45: */
        -:   46:static ecma_value_t
    #####:   47:ecma_builtin_set_prototype_object_add (ecma_value_t this_arg, /**< this argument */
        -:   48:                                       ecma_value_t value_arg) /**< value argument */
        -:   49:{
    #####:   50:  return ecma_op_container_set (this_arg, value_arg, value_arg, LIT_MAGIC_STRING_SET_UL);
        -:   51:} /* ecma_builtin_set_prototype_object_add */
        -:   52:
        -:   53:/**
        -:   54: * The Set.prototype object's 'clear' routine
        -:   55: *
        -:   56: * See also:
        -:   57: *          ECMA-262 v6, 23.2.3.2
        -:   58: *
        -:   59: * @return ecma value
        -:   60: *         Returned value must be freed with ecma_free_value.
        -:   61: */
        -:   62:static ecma_value_t
    #####:   63:ecma_builtin_set_prototype_object_clear (ecma_value_t this_arg) /**< this argument */
        -:   64:{
    #####:   65:  return ecma_op_container_clear (this_arg, LIT_MAGIC_STRING_SET_UL);
        -:   66:} /* ecma_builtin_set_prototype_object_clear */
        -:   67:
        -:   68:/**
        -:   69: * The Set.prototype object's 'delete' routine
        -:   70: *
        -:   71: * See also:
        -:   72: *          ECMA-262 v6, 23.2.3.4
        -:   73: *
        -:   74: * @return ecma value
        -:   75: *         Returned value must be freed with ecma_free_value.
        -:   76: */
        -:   77:static ecma_value_t
    #####:   78:ecma_builtin_set_prototype_object_delete (ecma_value_t this_arg, /**< this argument */
        -:   79:                                          ecma_value_t value_arg) /**< value argument */
        -:   80:{
    #####:   81:  return ecma_op_container_delete (this_arg, value_arg, LIT_MAGIC_STRING_SET_UL);
        -:   82:} /* ecma_builtin_set_prototype_object_delete */
        -:   83:
        -:   84:/**
        -:   85: * The Set.prototype object's 'forEach' routine
        -:   86: *
        -:   87: * See also:
        -:   88: *          ECMA-262 v6, 23.2.3.6
        -:   89: *
        -:   90: * @return ecma value
        -:   91: *         Returned value must be freed with ecma_free_value.
        -:   92: */
        -:   93:static ecma_value_t
    #####:   94:ecma_builtin_set_prototype_object_foreach (ecma_value_t this_arg, /**< this argument */
        -:   95:                                           ecma_value_t predicate, /**< callback function */
        -:   96:                                           ecma_value_t predicate_this_arg) /**< this argument for
        -:   97:                                                                             *   invoke predicate */
        -:   98:{
    #####:   99:  return ecma_op_container_foreach (this_arg, predicate, predicate_this_arg, LIT_MAGIC_STRING_SET_UL);
        -:  100:} /* ecma_builtin_set_prototype_object_foreach */
        -:  101:
        -:  102:/**
        -:  103: * The Set.prototype object's 'has' routine
        -:  104: *
        -:  105: * See also:
        -:  106: *          ECMA-262 v6, 23.2.3.7
        -:  107: *
        -:  108: * @return ecma value
        -:  109: *         Returned value must be freed with ecma_free_value.
        -:  110: */
        -:  111:static ecma_value_t
    #####:  112:ecma_builtin_set_prototype_object_has (ecma_value_t this_arg, /**< this argument */
        -:  113:                                       ecma_value_t value_arg) /**< value argument */
        -:  114:{
    #####:  115:  return ecma_op_container_has (this_arg, value_arg, LIT_MAGIC_STRING_SET_UL);
        -:  116:} /* ecma_builtin_set_prototype_object_has */
        -:  117:
        -:  118:/**
        -:  119: * The Set.prototype object's 'size' getter
        -:  120: *
        -:  121: * See also:
        -:  122: *          ECMA-262 v6, 23.2.3.9
        -:  123: *
        -:  124: * @return ecma value
        -:  125: *         Returned value must be freed with ecma_free_value.
        -:  126: */
        -:  127:static ecma_value_t
    #####:  128:ecma_builtin_set_prototype_object_size_getter (ecma_value_t this_arg) /**< this argument */
        -:  129:{
    #####:  130:  return ecma_op_container_size (this_arg, LIT_MAGIC_STRING_SET_UL);
        -:  131:} /* ecma_builtin_set_prototype_object_size_getter */
        -:  132:
        -:  133:#if ENABLED (JERRY_ES2015)
        -:  134:
        -:  135:/**
        -:  136: * The Set.prototype object's 'entries' routine
        -:  137: *
        -:  138: * See also:
        -:  139: *          ECMA-262 v6, 23.2.3.5
        -:  140: *
        -:  141: * @return ecma value
        -:  142: *         Returned value must be freed with ecma_free_value.
        -:  143: */
        -:  144:static ecma_value_t
    #####:  145:ecma_builtin_set_prototype_object_entries (ecma_value_t this_arg) /**< this argument */
        -:  146:{
    #####:  147:  return ecma_op_container_create_iterator (this_arg,
        -:  148:                                            ECMA_ITERATOR_KEYS_VALUES,
        -:  149:                                            LIT_MAGIC_STRING_SET_UL,
        -:  150:                                            ECMA_BUILTIN_ID_SET_ITERATOR_PROTOTYPE,
        -:  151:                                            ECMA_PSEUDO_SET_ITERATOR);
        -:  152:} /* ecma_builtin_set_prototype_object_entries */
        -:  153:
        -:  154:/**
        -:  155: * The Set.prototype object's 'keys' routine
        -:  156: *
        -:  157: * See also:
        -:  158: *          ECMA-262 v6, 23.2.3.8
        -:  159: *
        -:  160: * @return ecma value
        -:  161: *         Returned value must be freed with ecma_free_value.
        -:  162: */
        -:  163:static ecma_value_t
    #####:  164:ecma_builtin_set_prototype_object_keys (ecma_value_t this_arg) /**< this argument */
        -:  165:{
    #####:  166:  return ecma_op_container_create_iterator (this_arg,
        -:  167:                                            ECMA_ITERATOR_KEYS,
        -:  168:                                            LIT_MAGIC_STRING_SET_UL,
        -:  169:                                            ECMA_BUILTIN_ID_SET_ITERATOR_PROTOTYPE,
        -:  170:                                            ECMA_PSEUDO_SET_ITERATOR);
        -:  171:} /* ecma_builtin_set_prototype_object_keys */
        -:  172:
        -:  173:/**
        -:  174: * The Set.prototype object's 'values' routine
        -:  175: *
        -:  176: * See also:
        -:  177: *          ECMA-262 v6, 23.2.3.10
        -:  178: *
        -:  179: * @return ecma value
        -:  180: *         Returned value must be freed with ecma_free_value.
        -:  181: */
        -:  182:static ecma_value_t
    #####:  183:ecma_builtin_set_prototype_object_values (ecma_value_t this_arg) /**< this argument */
        -:  184:{
    #####:  185:  return ecma_op_container_create_iterator (this_arg,
        -:  186:                                            ECMA_ITERATOR_VALUES,
        -:  187:                                            LIT_MAGIC_STRING_SET_UL,
        -:  188:                                            ECMA_BUILTIN_ID_SET_ITERATOR_PROTOTYPE,
        -:  189:                                            ECMA_PSEUDO_SET_ITERATOR);
        -:  190:} /* ecma_builtin_set_prototype_object_values */
        -:  191:
        -:  192:#endif /* ENABLED (JERRY_ES2015) */
        -:  193:
        -:  194:/**
        -:  195: * @}
        -:  196: * @}
        -:  197: * @}
        -:  198: */
        -:  199:
        -:  200:#endif /* ENABLED (JERRY_ES2015_BUILTIN_SET) */
