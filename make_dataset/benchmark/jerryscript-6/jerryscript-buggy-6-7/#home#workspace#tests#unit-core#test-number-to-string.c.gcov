        -:    0:Source:/home/workspace/tests/unit-core/test-number-to-string.c
        -:    0:Programs:297
        -:    1:/* Copyright JS Foundation and other contributors, http://js.foundation
        -:    2: *
        -:    3: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    4: * you may not use this file except in compliance with the License.
        -:    5: * You may obtain a copy of the License at
        -:    6: *
        -:    7: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    8: *
        -:    9: * Unless required by applicable law or agreed to in writing, software
        -:   10: * distributed under the License is distributed on an "AS IS" BASIS
        -:   11: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12: * See the License for the specific language governing permissions and
        -:   13: * limitations under the License.
        -:   14: */
        -:   15:
        -:   16:#include "ecma-globals.h"
        -:   17:#include "ecma-helpers.h"
        -:   18:
        -:   19:#include "test-common.h"
        -:   20:
        -:   21:/**
        -:   22: * Unit test's main function.
        -:   23: */
        -:   24:int
    #####:   25:main (void)
        -:   26:{
    #####:   27:  TEST_INIT ();
        -:   28:
    #####:   29:  const lit_utf8_byte_t *strings[] = {
        -:   30:    (const lit_utf8_byte_t *) "1",         (const lit_utf8_byte_t *) "0.5",      (const lit_utf8_byte_t *) "12345",
        -:   31:    (const lit_utf8_byte_t *) "12345.123", (const lit_utf8_byte_t *) "1e-45",    (const lit_utf8_byte_t *) "-2.5e+38",
        -:   32:    (const lit_utf8_byte_t *) "NaN",       (const lit_utf8_byte_t *) "Infinity", (const lit_utf8_byte_t *) "-Infinity",
        -:   33:    (const lit_utf8_byte_t *) "0",         (const lit_utf8_byte_t *) "0",
        -:   34:  };
        -:   35:
    #####:   36:  const ecma_number_t nums[] = { (ecma_number_t) 1.0,       (ecma_number_t) 0.5,      (ecma_number_t) 12345.0,
        -:   37:                                 (ecma_number_t) 12345.123, (ecma_number_t) 1.0e-45,  (ecma_number_t) -2.5e+38,
    #####:   38:                                 (ecma_number_t) NAN,       (ecma_number_t) INFINITY, (ecma_number_t) -INFINITY,
        -:   39:                                 (ecma_number_t) + 0.0,     (ecma_number_t) -0.0 };
        -:   40:
    #####:   41:  for (uint32_t i = 0; i < sizeof (nums) / sizeof (nums[0]); i++)
        -:   42:  {
        -:   43:    lit_utf8_byte_t str[64];
        -:   44:
    #####:   45:    lit_utf8_size_t str_size = ecma_number_to_utf8_string (nums[i], str, sizeof (str));
        -:   46:
    #####:   47:    if (strncmp ((char *) str, (char *) strings[i], str_size) != 0)
        -:   48:    {
    #####:   49:      return 1;
        -:   50:    }
        -:   51:  }
        -:   52:
        -:   53:  return 0;
        -:   54:} /* main */
